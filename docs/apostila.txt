âœ… O que Ã© LangChain?
LangChain Ã© um framework de cÃ³digo aberto que facilita a criaÃ§Ã£o de aplicaÃ§Ãµes que usam modelos de linguagem (LLMs) como o GPT-4, Claude ou outros, de forma mais estruturada e integrada com dados externos, ferramentas e fluxos complexos.

Ele permite que vocÃª crie sistemas como:

Chatbots com memÃ³ria e contexto.

Agentes inteligentes que interagem com APIs e bancos de dados.

Buscadores inteligentes com RAG (Retrieval-Augmented Generation).

Workflows que combinam mÃºltiplas etapas e LLMs.

ğŸš€ Por que usar o LangChain?
Sem o LangChain, vocÃª teria que:

Montar sua lÃ³gica de chamada ao LLM na mÃ£o.

Criar cache, memÃ³ria, histÃ³rico.

Lidar com ferramentas externas e integrar com vetores manualmente.

Com o LangChain, vocÃª pode fazer isso com componentes reutilizÃ¡veis e padronizados.

ğŸ”§ Componentes principais do LangChain:
Componente	O que faz
LLMs	Interface com modelos como OpenAI, Anthropic, HuggingFace etc.
Chains	SequÃªncia de passos (ex: entrada â†’ prompt â†’ LLM â†’ saÃ­da).
Agents	LLMs com autonomia para decidir que ferramentas usar (ex: Google Search).
Tools	Ferramentas que o agent pode usar (ex: calculadora, API, banco de dados).
Retrievers	Mecanismo para buscar informaÃ§Ãµes em base vetorial (RAG).
Memory	Armazena contexto para conversas mais naturais e persistentes.
Embeddings	Vetores que representam significado de textos, usados em busca vetorial.


ğŸ“š AplicaÃ§Ãµes prÃ¡ticas
Chatbots com memÃ³ria: lembram do que foi dito anteriormente.

Assistentes com plugins (tools): acessam calculadora, pesquisa, etc.

Pesquisa em documentos PDF ou sites: com embeddings + retrievers.

Fluxos empresariais: como atendimento, triagem de dados, resumo de relatÃ³rios.

1. InstruÃ§Ã£o direta (Zero-shot prompting)
VocÃª dÃ¡ um comando direto ao modelo.

text
Copiar cÃ³digo
Traduza o seguinte texto para inglÃªs: "Eu gosto de programar".
No LangChain (Python):

python
Copiar cÃ³digo
PromptTemplate.from_template("Traduza o seguinte texto para inglÃªs: \"{texto}\"")
2. One-shot / Few-shot prompting
VocÃª dÃ¡ um ou mais exemplos para o modelo seguir o padrÃ£o.

text
Copiar cÃ³digo
Exemplo:
Entrada: O cÃ©u estÃ¡ azul.
SaÃ­da: O cÃ©u estÃ¡ azul. (PortuguÃªs â†’ PortuguÃªs)

Entrada: I am happy.
SaÃ­da: Eu estou feliz. (InglÃªs â†’ PortuguÃªs)

Entrada: He is learning AI.
SaÃ­da:
Isso ajuda a dar contexto e formato ao modelo.

3. Chain of Thought (cadeia de raciocÃ­nio)
VocÃª orienta o modelo a pensar passo a passo.

text
Copiar cÃ³digo
Pergunta: JoÃ£o tem 3 maÃ§Ã£s e compra mais 5. Quantas ele tem agora?
Vamos pensar passo a passo:
Isso melhora muito a capacidade lÃ³gica e matemÃ¡tica da LLM.

4. Prompt com papÃ©is (role prompting)
VocÃª define o papel do modelo para direcionar o estilo da resposta.

text
Copiar cÃ³digo
VocÃª Ã© um professor de histÃ³ria experiente. Explique a RevoluÃ§Ã£o Francesa de forma simples para um aluno do ensino mÃ©dio.
5. Prompt estruturado com variÃ¡veis (LangChain PromptTemplate)
python
Copiar cÃ³digo
from langchain.prompts import PromptTemplate

prompt = PromptTemplate.from_template(
    "VocÃª Ã© um especialista em {area}. Responda Ã  pergunta: {pergunta}"
)

print(prompt.format(area="medicina", pergunta="O que Ã© diabetes?"))

